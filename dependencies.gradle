//file:noinspection DependencyNotationArgument
// TODO remove when fixed in RFG ^
/*
 * Add your dependencies here. Supported configurations:
 *  - api("group:name:version:classifier"): if you use the types from this dependency in the public API of this mod
 *       Available at runtime and compiletime for mods depending on this mod
 *  - implementation("g:n:v:c"): if you need this for internal implementation details of the mod, but none of it is visible via the public API
 *       Available at runtime but not compiletime for mods depending on this mod
 *  - compileOnly("g:n:v:c"): if the mod you're building doesn't need this dependency during runtime at all, e.g. for optional mods
 *       Not available at all for mods depending on this mod, only visible at compiletime for this mod
 *  - compileOnlyApi("g:n:v:c"): like compileOnly, but also visible at compiletime for mods depending on this mod
 *       Available at compiletime but not runtime for mods depending on this mod
 *  - runtimeOnlyNonPublishable("g:n:v:c"): if you want to include a mod in this mod's runClient/runServer runs, but not publish it as a dependency
 *       Not available at all for mods depending on this mod, only visible at runtime for this mod
 *  - devOnlyNonPublishable("g:n:v:c"): a combination of runtimeOnlyNonPublishable and compileOnly for dependencies present at both compiletime and runtime,
 *       but not published as Maven dependencies - useful for RFG-deobfuscated dependencies or local testing
 *  - runtimeOnly("g:n:v:c"): if you don't need this at compile time, but want it to be present at runtime
 *       Available at runtime for mods depending on this mod
 *  - annotationProcessor("g:n:v:c"): mostly for java compiler plugins, if you know you need this, use it, otherwise don't worry
 *  - testCONFIG("g:n:v:c") - replace CONFIG by one of the above (except api), same as above but for the test sources instead of main
 *
 *  - shadowImplementation("g:n:v:c"): effectively the same as API, but the dependency is included in your jar under a renamed package name
 *       Requires you to enable usesShadowedDependencies in gradle.properties
 *       For more info, see https://github.com/GregTechCEu/Buildscripts/blob/master/docs/shadow.md
 *
 * You can exclude transitive dependencies (dependencies of the chosen dependency) by appending { transitive = false } if needed,
 * but use this sparingly as it can break using your mod as another mod's dependency if you're not careful.
 *
 * To depend on obfuscated jars you can use `devOnlyNonPublishable(rfg.deobf("dep:spec:1.2.3"))` to fetch an obfuscated jar from maven,
 * or `devOnlyNonPublishable(rfg.deobf(project.files("libs/my-mod-jar.jar")))` to use a file.
 *
 * To add a mod with CurseMaven, replace '("g:n:v:c")' in the above with 'rfg.deobf("curse.maven:project_slug-project_id:file_id")'
 * Example: devOnlyNonPublishable(rfg.deobf("curse.maven:top-245211:2667280"))
 *
 * Gradle names for some of the configuration can be misleading, compileOnlyApi and runtimeOnly both get published as dependencies in Maven, but compileOnly does not.
 * The buildscript adds runtimeOnlyNonPublishable to also have a runtime dependency that's not published.
 *
 * For more details, see https://docs.gradle.org/8.4/userguide/java_library_plugin.html#sec:java_library_configurations_graph
 */
dependencies {
    // Hard Dependencies
    implementation rfg.deobf("curse.maven:codechicken-lib-1-8-242818:2779848") // CCL 3.2.3.358
    implementation rfg.deobf("curse.maven:gregtech-ce-unofficial-557242:5519022-deobf-5519023-sources-5519024") // GTCEU 2.9.10
    implementation rfg.deobf("curse.maven:groovy-script-1.2.0-hotfix-1-687577:5789690") // Groovy Script 1.2.0-hotfix-1


    // Soft Dependencies, Compile Only, Optional Mods
    compileOnly rfg.deobf("curse.maven:avaritia-1-1x-unofficial-1165010:6206823") // Avaritia 3.3.0.44
    compileOnly rfg.deobf("curse.maven:eternal-singularity-1.0.7-253077:2922583") // Eternal Singularity 1.0.7
    compileOnly rfg.deobf("curse.maven:ae2-unofficial-extended-life-0.56.6-570458:5411078") // AE2 UEL 0.56.6
    compileOnly rfg.deobf("curse.maven:crazy-ae-0.3-1111042:5845065") // Crazy AE 0.56.6
    compileOnly rfg.deobf("curse.maven:thaumcraft-1.12.2-6.1.beta-26-223628:2629023") // Thaumcraft 6.1.beta-26
    compileOnly rfg.deobf("curse.maven:botania-r-1.10-364.4-225643:3330934") // Botania 1.0-364.4
    compileOnly rfg.deobf("curse.maven:astral-scorcery-1.12.2-1.10.27-241721:3044416") // Astral Scorcery 1.10.27
    compileOnly rfg.deobf("curse.maven:blood-magic-1.12.2-2.4.3-105-224791:2822288") // Blood Magic 2.4.3-105
    compileOnly rfg.deobf("curse.maven:logistics-pipes-0.10.4.29-105-232838:4007568") // Logistics Pipes 0.10.4.29
    compileOnly rfg.deobf("curse.maven:galacticraft-4.0.6-564236:4671122") // Galacticraft 4.0.6
    compileOnly rfg.deobf("curse.maven:extra-planets-0.8.0-241291:5339029") // Extra Planets 0.8.0

    // Mod Dependencies
    // Uncomment any of these to test in-game

    // Avaritia
//    runtimeOnlyNonPublishable rfg.deobf("curse.maven:avaritia-1.1x-unofficial-1165010:6206823") // Avaritia 3.3.0.44
//    runtimeOnlyNonPublishable rfg.deobf("curse.maven:eternal-singularity-1.0.7-253077:2922583") // Eternal Singularity 1.0.7
    // Avaritia

    // Applied Energistics 2
    runtimeOnlyNonPublishable rfg.deobf("curse.maven:ae2-unofficial-extended-life-0.56.6-570458:5411078") // AE2 UEL 0.56.6
    runtimeOnlyNonPublishable rfg.deobf("curse.maven:crazy-ae-0.3-1111042:5845065") // Crazy AE 0.56.6
    // Applied Energistics 2

    // Thaumcraft
//    runtimeOnlyNonPublishable rfg.deobf("curse.maven:thaumcraft-1.12.2-6.1.beta-26-223628:2629023") // Thaumcraft 6.1.beta-26
//    runtimeOnlyNonPublishable rfg.deobf("curse.maven:thaumic-jei-1.12.2-1.7.0-285492:5646810") // Thaumic JEI
    // Thaumcraft

    // Botania
//    runtimeOnlyNonPublishable rfg.deobf("curse.maven:botania-r-1.10-364.4-225643:3330934") // Botania 1.0-364.4
    // Botania

    // Astral Sorcery
//    runtimeOnlyNonPublishable rfg.deobf("curse.maven:astral-sorcery-1.12.2-1.10.27-241721:3044416") // Astral Sorcery 1.10.27
    // Astral Sorcery

    // Blood Magic
//    runtimeOnlyNonPublishable rfg.deobf("curse.maven:blood-magic-1.12.2-2.4.3-105-224791:2822288") // Blood Magic 2.4.3-105
    // Blood Magic

    // Logistics Pipes
//    runtimeOnlyNonPublishable rfg.deobf("curse.maven:logistics-pipes-0.10.4.29-232838:4007568") // Logistics Pipes 0.10.4.29
    // Logistics Pipes

    // Draconic Evolution
//    runtimeOnlyNonPublishable rfg.deobf("curse.maven:draconic-evolution-2.3.28.354-223565:3431261") // Draconic Evolution 2.3.28.354
    // Draconic Evolution

    // Galacticraft
//    runtimeOnlyNonPublishable rfg.deobf("curse.maven:galacticraft-4.0.6-564236:4671122") // Galacticraft 4.0.6
//    runtimeOnlyNonPublishable rfg.deobf("curse.maven:extra-planets-0.8.0-241291:5339029") // Extra Planets 0.8.0
    // Galacticraft


    // Core mods needed for other Mods, Not a dependency
    runtimeOnlyNonPublishable rfg.deobf("curse.maven:baubles-1.12-1.5.2-227083:2518667") // Baubles
    runtimeOnlyNonPublishable rfg.deobf("curse.maven:guide-api-1.12-2.1.8-63-228832:2645992") // Guide API
    runtimeOnlyNonPublishable rfg.deobf("curse.maven:mixin-booter-10.2-419286:5906634") // Mixin Booter 10.2
    runtimeOnlyNonPublishable rfg.deobf("curse.maven:ctm-267602:2915363") // CTM 1.0.2.31
    runtimeOnlyNonPublishable rfg.deobf("curse.maven:ore-dict-tips-252832:2545766") // OreDictTips 2.0.2
    runtimeOnlyNonPublishable rfg.deobf("curse.maven:wanion-lib-2.91-253043:4623135") // Wanion Lib 2.91
    runtimeOnlyNonPublishable rfg.deobf("curse.maven:redstone-flux-2.1.1.1-270789:2920436") // Redstone Flux 2.1.1.1
    runtimeOnlyNonPublishable rfg.deobf("curse.maven:brandons-core-2.4.20.162-231382:3408276") // Brandons Core 2.4.20.162
    runtimeOnlyNonPublishable rfg.deobf("curse.maven:mjrlegends-lib-1.2.1-284331:3344068") // MJRLegends Lib 0.8.0
}
